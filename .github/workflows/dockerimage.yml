name: Docker Image CI

on:
  push:
    branches: [main]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        image: [tools, hashicorp-tools, istio-tools, nomad, shipyard-all-in-one, k3s, ubuntu]
        include:
          - image: tools
            directory: shipyard-tools
            dockerfile: Dockerfile
          - image: hashicorp-tools
            directory: hashicorp-tools
            dockerfile: Dockerfile
          - image: istio-tools
            directory: istio-tools
            dockerfile: Dockerfile
          - image: k3s
            directory: k3s
            dockerfile: Dockerfile
          - image: nomad
            directory: nomad
          - image: shipyard-all-in-one
            directory: shipyard-all-in-one
            dockerfile: Dockerfile
          - image: ubuntu
            directory: ubuntu
            dockerfile: Dockerfile
          - image: k6
            directory: k6
            dockerfile: Dockerfile

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 3

      - name: Check for changes
        id: check_for_changes
        run: |
          echo "::set-output name=change_count::$(git diff --name-only  HEAD^ HEAD | grep '${{ matrix.directory }}' | wc -l)"

      - name: Get dependencies
        if: steps.check_for_changes.outputs.change_count != '0'
        run: |
          echo "changes: ${{ steps.check_for_changes.outputs.change_count }} event: ${{ github.event_name }}"
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build the Docker image
        if: steps.check_for_changes.outputs.change_count != '0'
        run: |
          cd ${{ matrix.directory }}
          make build_docker

      - name: Push the Docker image
        if: steps.check_for_changes.outputs.change_count != '0'
        run: |
          cd ${{ matrix.directory }}
          make push_docker
          
      - name: Send status to Discord
        uses: sarisia/actions-status-discord@v1
        if: steps.check_for_changes.outputs.change_count != '0'
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
